{
    "name": "DF_filter_UPPER",
    "properties": {
        "type": "MappingDataFlow",
        "typeProperties": {
            "sources": [
                {
                    "dataset": {
                        "referenceName": "DS_DF_Movies",
                        "type": "DatasetReference"
                    },
                    "name": "source1"
                }
            ],
            "sinks": [
                {
                    "dataset": {
                        "referenceName": "DS_Blob_DF_OP",
                        "type": "DatasetReference"
                    },
                    "name": "sink1"
                }
            ],
            "transformations": [
                {
                    "name": "select1"
                },
                {
                    "name": "filter1"
                },
                {
                    "name": "ModifyColumns1",
                    "description": "Autogenerated by data preview actions"
                }
            ],
            "scriptLines": [
                "source(output(",
                "          movieId as string,",
                "          title as string,",
                "          genres as string",
                "     ),",
                "     allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     ignoreNoFilesFound: false) ~> source1",
                "source1 select(mapColumn(",
                "          movieId,",
                "          title",
                "     ),",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true) ~> select1",
                "select1 filter(length(title)>20) ~> filter1",
                "filter1 derive(title = upper(title)) ~> ModifyColumns1",
                "ModifyColumns1 sink(allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     filePattern:'Output_File',",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true,",
                "     partitionBy('hash', 4,",
                "          title",
                "     )) ~> sink1"
            ]
        }
    }
}